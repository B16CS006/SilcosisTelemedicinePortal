<div style="margin-top:100px; padding:20px;" class="container-fluid col-xs-12 col-sm-8 col-md-8 col-lg-5">
    <div>
        {{!-- <input type="email" id="otherEmailId" placeholder="Write email" id="email"> --}}
        <a href="/chat/#init" class="btn btn-secondary btn-block">Make A Call</a>
    </div>
    <div id="outgoingCall" class="row"></div>
    <h5 style="margin-top: 30px;">Incoming Calls</h5>
    <div class="row" id="incomingCalls"></div>
</div>
<script>
    var user = '{{ user }}'
    var element = function(id){ return document.getElementById(id) }
    
    var incomingCallsDiv = document.getElementById('incomingCalls')

    reloadIncomingCall()
    
    function loadDoc(method, url, data, isasync, callback){
        let xmlHttpReq
        if (window.XMLHttpRequest) { xmlHttpReq = new XMLHttpRequest(); } // code for modern browsers
        else { xmlHttpReq = new ActiveXObject("Microsoft.XMLHTTP"); } // code for old IE browsers

        xmlHttpReq.onreadystatechange = function() {
            if (this.readyState === 4) {
            callback(this);
            }
        };

        xmlHttpReq.open(method, url, isasync);
        xmlHttpReq.setRequestHeader("Content-type", "application/json");
        xmlHttpReq.send(data);
    }

    function getIncomingCalls(data, callback){
        console.log('getting incoming calls')
        loadDoc('POST', '/calls/getIncoming', data, true, (request) => {
            callback(JSON.parse(request.responseText))
        })
    }

    function reloadIncomingCall(){

        getIncomingCalls(null, (incommingCalls) => {
            for( incommingCall of incommingCalls.code){
                console.log(incommingCall)
                var incommingCallDiv = document.createElement('div')
                incommingCallDiv.setAttribute('class', 'card btn-block')
                incommingCallDiv.style.margin = '10px'

                var cardBody = document.createElement('div')
                cardBody.setAttribute('class', 'card-body')

                var title = document.createElement('p')
                title.innerHTML = incommingCall.myID

                var created = document.createElement('p')
                created.innerHTML = incommingCall.created

                var form = document.createElement('form');
                form.setAttribute('method', 'POST');
                form.setAttribute('action', '/calls/accept');
                form.setAttribute("Content-type", "application/json")

                var otherID = document.createElement('input');
                otherID.setAttribute('type', 'hidden');
                otherID.setAttribute('name', 'otherID');
                otherID.setAttribute('value', incommingCall.myID);  // for reply myID became otherID and otherID became myID

                var code = document.createElement('input');
                code.setAttribute('type', 'hidden');
                code.setAttribute('name', 'code');
                code.setAttribute('value', incommingCall.code);

                var acceptButton = document.createElement('button')
                acceptButton.setAttribute('class', 'btn btn-primary')
                acceptButton.setAttribute('type', 'submit');
                acceptButton.style.cssFloat = 'right'
                acceptButton.innerHTML = 'Accept'
                acceptButton.style.color = 'white'

                var rejectButton = document.createElement('button')
                rejectButton.setAttribute('class', 'btn btn-warning')
                rejectButton.disabled = true
                rejectButton.style.cssFloat = 'right'
                rejectButton.style.marginRight = '10px'
                rejectButton.innerHTML = 'Reject'
                rejectButton.style.color = 'white'

                form.appendChild(otherID);
                form.appendChild(code)
                form.appendChild(acceptButton)
                form.appendChild(rejectButton)

                cardBody.appendChild(title)
                cardBody.appendChild(created)
                cardBody.appendChild(form)

                incommingCallDiv.appendChild(cardBody)

                incomingCallsDiv.appendChild(incommingCallDiv)
            }
        })
    }

    function deleteChild(component){
        if(typeof component === 'string'){
            var e = document.getElementById(component);
            e.innerHTML = '';
        }else{
            component.innerHTML = '';
        }
    }
</script>